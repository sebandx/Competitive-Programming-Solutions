#include <bits/stdc++.h>
using namespace std;

// sieve
// primes in n! are in n 
vector<bool> sieve(int n) {
    vector<bool> prime(n + 1, true);
    for (int i = 2; i * i <= n; i++) {
        if (prime[i]) {
            for (int j = i * i; j <= n; j += i) {
                prime[j] = false;
            }
        }
    }
    return prime;
}


int countExponent(int n, int p) {
    int res = 0;
    while (n) {
        res += n / p;
        n /= p;
    }
    return res;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    for (int k = 0; k < 5; k++) {
        int n; cin >> n;
        vector<bool> prime = sieve(n);

        vector<int> primes;
        for (int i = 2; i <= n; i++) {
            if (prime[i]) {
                primes.push_back(i);
            }
        }

        for (int i = 0; i < primes.size(); i++) {
            int p = primes[i];
            cout << p << "^" << countExponent(n, p);
            if (i + 1 < primes.size()) {
                cout << " * ";
            }
        }
        cout << "\n";
    }

    return 0;
}

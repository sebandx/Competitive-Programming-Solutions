import java.io.*;
import java.util.*;
public class Main {
  static HashMap <Integer, Integer> crystalYorN = new HashMap<Integer, Integer>();
  
  static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  static StringTokenizer st;

  static String next() throws IOException {
     while (st == null || !st.hasMoreTokens())
       st = new StringTokenizer(br.readLine().trim());
    return st.nextToken();
  }
  static int nextInt() throws IOException {
    return Integer.parseInt(next());
  }

  static void crystal(int mag, int x, int y) {
    int relativeX;
    int relativeY;

    int num = 1;
    for (int i = 0; i < (mag - 1); i++) {
      num = num*5;
    }
    relativeX = x / (num);
    relativeY = y / (num);
    
    int combo = relativeX*10 + relativeY;
    
    if (!crystalYorN.containsKey(combo)) {
      System.out.println("empty");
      return;
    }
    if (mag < 0) {
      System.out.println("empty");
      return;
    }
    
    int cellStatus = crystalYorN.get(combo);
    
    if (cellStatus == 1) {
      System.out.println("crystal");
      return;
    }
      
    else if (cellStatus == 2) {
      x = x % num;
      y = y % num;
      crystal(mag - 1, x, y);
    }
    
    
    
  }
  public static void main(String[] args) throws IOException {
    crystalYorN.put(10,1);
    crystalYorN.put(20,1);
    crystalYorN.put(30,1);
    crystalYorN.put(21,1);
    crystalYorN.put(11,2);
    crystalYorN.put(22,2);
    crystalYorN.put(31,2);
    int numCases = nextInt();

    for (int i = 0; i < numCases; i++) {
      int mag = nextInt();
      int x = nextInt();
      int y = nextInt();
      crystal(mag,x,y);
    }
  }
}

import java.util.*;
import java.io.*;
public class COCI14C53Traktor {
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int k = Integer.parseInt(st.nextToken());
		
		HashMap<Integer, Integer> vertical = new HashMap<Integer, Integer>();
		HashMap<Integer, Integer> horizontal = new HashMap<Integer, Integer>();
		HashMap<Integer, Integer> diagonalMinus = new HashMap<Integer, Integer>();
		HashMap<Integer, Integer> diagonalPlus = new HashMap<Integer, Integer>();
		
		int timeElapsed = 0;
		boolean success = false;
		
		for (int i = 0; i < n; i++) {
			timeElapsed++;
			st = new StringTokenizer(br.readLine());
			
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());
				
				
			if (vertical.containsKey(x)) {
				vertical.put(x, vertical.get(x) + 1);
				if (vertical.get(x) == k) {
					success = true;
					break;
				}
			}
			else {
				vertical.put(x, 1);
			}
				
			if (horizontal.containsKey(y)) {
				horizontal.put(y, horizontal.get(y) + 1);
				if (horizontal.get(y) == k) {
					success = true;
					break;
				}
			}
			else {
				horizontal.put(y, 1);
			}
				
			if (diagonalPlus.containsKey(x + y)) {
				diagonalPlus.put(x + y, diagonalPlus.get(x + y) + 1);
				if (diagonalPlus.get(x + y) == k) {
					success = true;
					break;
				}
			}
			else {
				diagonalPlus.put(x + y, 1);
			}
				
			if (diagonalMinus.containsKey(x - y)) {
				diagonalMinus.put(x - y, diagonalMinus.get(x - y) + 1);
				if (diagonalMinus.get(x - y) == k) {
					success = true;
					break;
				}
			}
			else {
				diagonalMinus.put(x - y, 1);
			}
			
			
		}
			
		if (success == true) {
			System.out.println(timeElapsed);
		}
		else {
			System.out.println(-1);
		}
		
	}
}
